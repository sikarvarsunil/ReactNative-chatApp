{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/suneel/Documents/ss/projects/reactNative/myApp/reactnative-chatApp/ReactNative-chatApp/components/InputBox/index.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Entypo, FontAwesome5, Fontisto, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport styles from \"./style\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar InputBox = function InputBox() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var onMicrophonePress = function onMicrophonePress() {\n    console.warn(message, 'Microphone');\n  };\n\n  var onSendPress = function onSendPress() {\n    console.warn(message, \"Sending \" + message);\n  };\n\n  var onPress = function onPress() {\n    if (!message) {\n      onMicrophonePress();\n    } else {\n      onSendPress();\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"laugh-beam\",\n    size: 24,\n    color: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Type a message\",\n    style: styles.textInput,\n    multiline: true,\n    value: message,\n    onChangeText: setMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Entypo, {\n    name: \"attachment\",\n    size: 24,\n    color: \"grey\",\n    style: styles.attachment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), !message && React.createElement(Fontisto, {\n    name: \"camera\",\n    size: 24,\n    color: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.bottomContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, !message ? React.createElement(MaterialCommunityIcons, {\n    name: \"microphone\",\n    size: 28,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }) : React.createElement(MaterialIcons, {\n    name: \"send\",\n    size: 28,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }))));\n};\n\nexport default InputBox;","map":{"version":3,"sources":["/Users/suneel/Documents/ss/projects/reactNative/myApp/reactnative-chatApp/ReactNative-chatApp/components/InputBox/index.tsx"],"names":["React","useState","Entypo","FontAwesome5","Fontisto","MaterialCommunityIcons","MaterialIcons","styles","TouchableOpacity","InputBox","message","setMessage","onMicrophonePress","console","warn","onSendPress","onPress","container","mainContainer","textInput","attachment","bottomContainer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,QAA/B,EAAyCC,sBAAzC,EAAiEC,aAAjE,QAAsF,oBAAtF;AACA,OAAOC,MAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,kBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAQS,OAAR;AAAA,MAAiBC,UAAjB;;AAGA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BC,IAAAA,OAAO,CAACC,IAAR,CAAaJ,OAAb,EAAsB,YAAtB;AAED,GAHD;;AAIA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,OAAO,CAACC,IAAR,CAAaJ,OAAb,eAAiCA,OAAjC;AACD,GAFD;;AAGA,MAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAI,CAACN,OAAL,EAAc;AACZE,MAAAA,iBAAiB;AAClB,KAFD,MAEO;AACLG,MAAAA,WAAW;AACZ;AACF,GAND;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,IAAI,EAAE,EAAtC;AAA0C,IAAA,KAAK,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,gBADd;AAEE,IAAA,KAAK,EAAEX,MAAM,CAACY,SAFhB;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAET,OAJT;AAKE,IAAA,YAAY,EAAEC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAC,MAA1C;AAAiD,IAAA,KAAK,EAAEJ,MAAM,CAACa,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASG,CAACV,OAAD,IAAY,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATf,CADA,EAYA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEM,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACc,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACX,OAAD,GACG,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,YAA7B;AAA0C,IAAA,IAAI,EAAE,EAAhD;AAAoD,IAAA,KAAK,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CADA,CAZA,CADF;AAuBD,CA1CD;;AA2CA,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput } from 'react-native';\nimport { Entypo, FontAwesome5, Fontisto, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons'\nimport styles from './style';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nconst InputBox = () => {\n  const [ message, setMessage ] = useState('');\n\n\n  const onMicrophonePress = () => {\n    console.warn(message, 'Microphone');\n\n  }\n  const onSendPress = () => {\n    console.warn(message, `Sending ${message}`);\n  }\n  const onPress = () => {\n    if (!message) {\n      onMicrophonePress();\n    } else {\n      onSendPress();\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n    <View style={styles.mainContainer}>\n      <FontAwesome5 name=\"laugh-beam\" size={24} color=\"grey\"/>\n      <TextInput\n        placeholder=\"Type a message\"\n        style={styles.textInput}\n        multiline\n        value={message}\n        onChangeText={setMessage}/>\n      <Entypo name=\"attachment\" size={24} color=\"grey\" style={styles.attachment}/>\n      {!message && <Fontisto name=\"camera\" size={24} color=\"grey\" />}\n    </View>\n    <TouchableOpacity onPress={onPress}>\n    <View style={styles.bottomContainer}>\n      {!message\n        ? <MaterialCommunityIcons name=\"microphone\" size={28} color=\"white\"/>\n        :<MaterialIcons name=\"send\" size={28} color=\"white\"/>\n      }\n    </View>\n    </TouchableOpacity>\n  </View>\n  )\n}\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}