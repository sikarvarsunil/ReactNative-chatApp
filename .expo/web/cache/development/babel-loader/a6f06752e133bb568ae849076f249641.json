{"ast":null,"code":"var _jsxFileName = \"/Users/suneel/Documents/ss/projects/reactNative/myApp/reactnative-chatApp/ReactNative-chatApp/navigation/index.tsx\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Octicons, MaterialCommunityIcons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport MainTabNavigator from \"./MainTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport Colors from \"../constants/Colors\";\nimport ChatRoomScreen from \"../screens/ChatRoomScreen\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n        shadowOpacity: 0,\n        elevation: 0\n      },\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: MainTabNavigator,\n    options: {\n      title: 'WhatsApp',\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: 60,\n            marginRight: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }\n        }, React.createElement(Octicons, {\n          name: \"search\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }), React.createElement(MaterialCommunityIcons, {\n          name: \"dots-vertical\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatRoom\",\n    component: ChatRoomScreen,\n    options: function options(_ref2) {\n      var _route$params;\n\n      var route = _ref2.route;\n      return {\n        title: route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.name,\n        headerBackTitleVisible: true,\n        headerBackImage: function headerBackImage() {\n          var _route$params2;\n\n          return React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              width: 40,\n              marginLeft: 5\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 34\n            }\n          }, React.createElement(MaterialIcons, {\n            name: \"chevron-left\",\n            size: 34,\n            color: \"white\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }\n          }), React.createElement(Image, {\n            style: {\n              width: 30,\n              height: 30,\n              borderRadius: 100,\n              paddingRight: 5\n            },\n            source: {\n              uri: route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.avatar\n            },\n            resizeMode: \"contain\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }\n          }));\n        },\n        headerRight: function headerRight() {\n          return React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              width: 80,\n              marginRight: 10,\n              paddingRight: 5\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 30\n            }\n          }, React.createElement(FontAwesome5, {\n            name: \"video\",\n            size: 20,\n            color: \"white\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }\n          }), React.createElement(MaterialIcons, {\n            name: \"call\",\n            size: 20,\n            color: \"white\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }\n          }), React.createElement(MaterialCommunityIcons, {\n            name: \"dots-vertical\",\n            size: 20,\n            color: \"white\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/suneel/Documents/ss/projects/reactNative/myApp/reactnative-chatApp/ReactNative-chatApp/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","Octicons","MaterialCommunityIcons","MaterialIcons","FontAwesome5","NotFoundScreen","MainTabNavigator","LinkingConfiguration","Colors","ChatRoomScreen","Navigation","colorScheme","Stack","RootNavigator","headerStyle","backgroundColor","light","tint","shadowOpacity","elevation","headerTintColor","background","headerTitleAlign","title","headerRight","flexDirection","justifyContent","width","marginRight","route","params","name","headerBackTitleVisible","headerBackImage","marginLeft","height","borderRadius","paddingRight","uri","avatar"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, check out the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName, View, Image } from 'react-native';\nimport {Octicons, MaterialCommunityIcons, MaterialIcons, FontAwesome5} from '@expo/vector-icons'\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../types';\nimport MainTabNavigator from './MainTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport Colors from '../constants/Colors'\nimport ChatRoomScreen from '../screens/ChatRoomScreen';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ \n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n        shadowOpacity: 0,\n        elevation: 0\n      },\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n\n      }}>\n      <Stack.Screen name=\"Root\" component={MainTabNavigator} \n      options={{\n        title: 'WhatsApp',\n        headerRight: () => <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: 60,\n          marginRight: 10\n        }}>\n            <Octicons name=\"search\" size={24} color=\"white\"/>\n            <MaterialCommunityIcons name=\"dots-vertical\" size={24} color=\"white\"/>\n          </View>\n      }}/>\n      <Stack.Screen \n        name=\"ChatRoom\"\n        component={ChatRoomScreen}\n        options={({ route }) => ({\n          title: route?.params?.name,\n          headerBackTitleVisible: true,\n          headerBackImage: () => <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: 40,\n            marginLeft: 5,\n          }}>\n            <MaterialIcons name=\"chevron-left\" size={34} color=\"white\"/>\n            <Image\n              style={{ width: 30, height: 30, borderRadius: 100, paddingRight: 5, }}\n              source={{uri: route?.params?.avatar}}\n              resizeMode='contain'\n            /></View>,\n          headerRight: () => <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: 80,\n            marginRight: 10,\n            paddingRight: 5\n          }}>\n              <FontAwesome5 name=\"video\" size={20} color=\"white\"/>\n              <MaterialIcons name=\"call\" size={20} color=\"white\"/>\n              <MaterialCommunityIcons name=\"dots-vertical\" size={20} color=\"white\"/>\n            </View>\n        })}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: 'Oops!' }}\n      />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}